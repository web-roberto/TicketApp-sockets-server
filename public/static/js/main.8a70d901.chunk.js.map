{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","context/UiContext.js","hooks/useHideMenu.js","helpers/getUsuarioStorage.js","pages/Ingresar.js","helpers/getUltimos.js","pages/Cola.js","pages/CrearTicket.js","pages/Escritorio.js","pages/RouterPage.js","TicketApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","serverPath","socket","useMemo","io","connect","useState","online","setOnline","useEffect","connected","on","useSocket","Provider","value","UiContext","UiProvider","ocultarMenu","setOcultarMenu","showMenu","hideMenu","useHideMenu","ocultar","useContext","getUsuarioStorage","agente","localStorage","getItem","escritorio","Title","Typography","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Ingresar","history","useHistory","usuario","to","level","name","initialValues","remember","onFinish","setItem","push","onFinishFailed","errorInfo","console","log","Item","label","rules","required","message","min","max","type","htmlType","shape","SaveOutlined","getUltimos","a","fetch","resp","json","data","ultimos","Cola","tickets","setTickets","asignados","off","then","dataSource","slice","renderItem","item","style","width","marginTop","actions","color","numero","Meta","title","description","CrearTicket","ticket","setTicket","align","icon","DownloadOutlined","size","onClick","emit","fontSize","Escritorio","clear","replace","CloseCircleOutlined","RightOutlined","Sider","Layout","Content","RouterPage","height","collapsedWidth","breakpoint","hidden","className","theme","mode","defaultSelectedKeys","key","UserOutlined","VideoCameraOutlined","UploadOutlined","margin","padding","minHeight","path","component","TicketApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a70d901.chunk.js","sourcesContent":["import React, { createContext } from 'react';\nimport { useSocket } from '../hooks/useSocket';\n\n\nexport const SocketContext = createContext();\n\n\nexport const SocketProvider = ({ children }) => {\n\n    const { socket, online } = useSocket('https://ticketapp-socket.herokuapp.com/');\n\n    return (\n        <SocketContext.Provider value={{ socket, online }}>\n            { children }\n        </SocketContext.Provider>\n    )\n}\n\n","import { useMemo, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nexport const useSocket = ( serverPath ) => {\n\n    const socket = useMemo( () => io.connect( serverPath ), [ serverPath ] );\n    const [ online, setOnline ] = useState(false);\n\n    useEffect(() => {\n        setOnline( socket.connected );\n    }, [ socket ])\n\n    useEffect( () => {\n        socket.on('connect', () => {\n            setOnline( true );\n        })\n\n    }, [ socket ])\n\n    useEffect( () => {\n\n        socket.on('disconnect', () => {\n            setOnline( false );\n        })\n\n    }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}","import React, { createContext, useState } from 'react'\n\nexport const UiContext = createContext();\n\n\nexport const UiProvider = ({ children }) => {\n\n    const [ ocultarMenu, setOcultarMenu ] = useState(false);\n\n    const showMenu = () => {\n        setOcultarMenu( false );\n    }\n\n    const hideMenu = () => {\n        setOcultarMenu( true );\n    }\n\n\n    return (\n        <UiContext.Provider value={{\n            ocultarMenu,\n            showMenu, \n            hideMenu\n        }}>\n            { children }\n        </UiContext.Provider>\n    )\n}\n","import { useContext, useEffect } from 'react'\nimport { UiContext } from '../context/UiContext'\n\nexport const useHideMenu = ( ocultar ) => {\n\n    const { showMenu, hideMenu } = useContext( UiContext );\n\n    useEffect(() => {\n        \n        if ( ocultar ) {\n            hideMenu();\n        } else {\n            showMenu()\n        }\n\n    }, [ ocultar, hideMenu, showMenu ])\n\n}\n","\n\nexport const getUsuarioStorage = () => {\n    return {\n        agente: localStorage.getItem('agente'),\n        escritorio: localStorage.getItem('escritorio'),\n    }\n}","import React, { useState } from 'react';\n\nimport { Form, Input, Button, InputNumber, Typography, Divider } from 'antd';\nimport { SaveOutlined } from '@ant-design/icons';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nimport { useHideMenu } from '../hooks/useHideMenu';\nimport { getUsuarioStorage } from '../helpers/getUsuarioStorage';\n\nconst { Title, Text } = Typography;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 14 },\n};\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 14 },\n};\n\n\nexport const Ingresar = () => {\n\n    const history = useHistory();\n    const [ usuario ] = useState( getUsuarioStorage() );\n\n    useHideMenu(false);\n\n    const onFinish = ({ agente, escritorio }) => {\n\n        localStorage.setItem('agente', agente );\n        localStorage.setItem('escritorio', escritorio );\n\n        history.push('/escritorio');\n    };\n    \n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    if ( usuario.agente && usuario.escritorio ) {\n        return <Redirect to=\"/escritorio\" />\n    }\n\n\n    return (\n        <>\n            <Title level={ 2 }>Ingresar</Title>\n            <Text>Ingrese su nombre y número de escritorio</Text>\n            <Divider />\n\n            <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            >\n            <Form.Item\n                label=\"Nombre del agente\"\n                name=\"agente\"\n                rules={[{ required: true, message: 'Por favor ingrese su nombre' }]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Escritorio\"\n                name=\"escritorio\"\n                rules={[{ required: true, message: 'Ingrese el número de escritorio' }]}\n            >\n                <InputNumber min={ 1 } max={ 99 } />\n            </Form.Item>\n\n\n                <Form.Item {...tailLayout}>\n                    <Button \n                        type=\"primary\" \n                        htmlType=\"submit\"\n                        shape=\"round\"\n                    >\n                        <SaveOutlined />\n                        Ingresar\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n","export const getUltimos = async () => {\n  const resp = await fetch('https://ticketapp-socket.herokuapp.com//ultimos');\n  const data = await resp.json();\n\n  return data.ultimos;\n};\n\n//const [state, dispatch] = useReducer(first, second, third)\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { Col, Row, Typography, List, Card, Tag, Divider } from 'antd';\n\nimport { SocketContext } from '../context/SocketContext';\nimport { useHideMenu } from '../hooks/useHideMenu';\nimport { getUltimos } from '../helpers/getUltimos';\n\n\nconst { Title, Text } = Typography;\n\n\nexport const Cola = () => {\n\n    useHideMenu(true);\n\n    const { socket } = useContext( SocketContext );\n    const [ tickets, setTickets ] = useState([]);\n\n    useEffect(() => {\n        \n        socket.on( 'ticket-asignado', ( asignados ) => {\n            setTickets( asignados )\n        });\n\n        return () => {\n            socket.off('ticket-asignado');\n        }\n    }, [socket])\n\n    useEffect( () => {\n        getUltimos().then( setTickets );\n    }, []);\n\n    return (\n        <>\n            <Title level={ 1 }>Atendiendo al cliente</Title>\n            <Row>\n                <Col span={ 12 }>\n                    <List \n                        dataSource={ tickets.slice(0,3) }\n                        renderItem={ item => (\n                            <List.Item>\n                                <Card\n                                    style={{ width: 300, marginTop: 16 }}\n                                    actions={[\n                                        <Tag color=\"volcano\"> { item.agente } </Tag>,\n                                        <Tag color=\"magenta\"> Escritorio: { item.escritorio } </Tag>,\n                                    ]}\n                                >\n                                    <Title> No. { item.numero  }</Title>\n                                </Card>\n                            </List.Item>\n                        )}\n                    />\n                </Col>\n\n\n                <Col span={ 12 }>\n\n                    <Divider> Historial </Divider>\n                    <List \n                        dataSource={ tickets.slice(3) }\n                        renderItem={ item => (\n                            <List.Item>\n                                <List.Item.Meta \n                                    title={ `Ticket No. ${ item.numero }` }\n                                    description={\n                                        <>\n                                            <Text type=\"secondary\">En el escritorio: </Text>\n                                            <Tag color=\"magenta\"> { item.numero } </Tag>\n                                            <Text type=\"secondary\"> Agente: </Text>\n                                            <Tag color=\"volcano\"> { item.agente } </Tag>\n                                        </>\n                                    }\n                                />\n                            </List.Item>\n                        )}\n                    \n                    />\n\n                </Col>\n            </Row>\n\n        </>\n    )\n}\n","import React, { useContext, useState } from 'react';\nimport { Button, Col, Row, Typography } from 'antd';\nimport { DownloadOutlined } from '@ant-design/icons'\nimport { useHideMenu } from '../hooks/useHideMenu';\nimport { SocketContext } from '../context/SocketContext';\n\n\nconst { Title, Text } = Typography;\n\n\nexport const CrearTicket = () => {\n\n    useHideMenu(true);\n\n    const { socket } = useContext( SocketContext );\n    const [ ticket, setTicket] = useState(null);\n\n\n    const nuevoTicket = () => {\n        socket.emit('solicitar-ticket', null, (ticket) => {\n            setTicket( ticket );\n        });\n    }\n\n    return (\n        <>\n            <Row>\n                <Col span={ 14 } offset={ 6 } align=\"center\">\n                    <Title level={ 3 }>\n                        Presione el botón para un nuevo ticket\n                    </Title>\n\n                    <Button\n                        type=\"primary\"\n                        shape=\"round\"\n                        icon={ <DownloadOutlined /> }\n                        size=\"large\"\n                        onClick={ nuevoTicket }\n                    >\n                        Nuevo Ticket\n\n                    </Button>\n                </Col>\n            </Row>\n\n            {\n                ticket && (\n                    <Row style={{ marginTop: 100 }}>\n                        <Col span={ 14 } offset={ 6 } align=\"center\">\n                            <Text level={ 2 }>\n                                Su número\n                            </Text>\n                            <br />\n                            <Text type=\"success\" style={{ fontSize: 55 }}>\n                                { ticket.numero }\n                            </Text>\n                        </Col>\n                    </Row>\n                )\n            }\n        </>\n    )\n}\n","import React, { useContext, useState } from 'react';\nimport { Row, Col, Typography, Button, Divider } from 'antd';\nimport { CloseCircleOutlined, RightOutlined } from '@ant-design/icons';\n\nimport { SocketContext } from '../context/SocketContext';\nimport { useHideMenu } from '../hooks/useHideMenu';\n\nimport { getUsuarioStorage } from '../helpers/getUsuarioStorage';\nimport { Redirect, useHistory } from 'react-router-dom';\n\n\nconst { Title, Text } = Typography;\n\nexport const Escritorio = () => {\n\n    useHideMenu(false);\n\n    const [ usuario ] = useState( getUsuarioStorage() );\n    const { socket } = useContext( SocketContext );\n    const [ ticket, setTicket ] = useState(null)\n    const history = useHistory();\n\n    const salir = () => {\n        localStorage.clear();\n        history.replace('/ingresar');\n    }\n\n    const siguienteTicket = () => {\n        socket.emit( 'siguiente-ticket-trabajar', usuario, ( ticket ) => {\n            setTicket( ticket );\n        });\n    }\n\n    if ( !usuario.agente || !usuario.escritorio ) {\n        return <Redirect to=\"/ingresar\" />\n    }\n\n\n    return (\n        <>\n            <Row>\n                <Col span={ 20 }>\n                    <Title level={ 2 }>{ usuario.agente }</Title>\n                    <Text>Usted está trabajando en el escritorio: </Text>\n                    <Text type=\"success\"> { usuario.escritorio } </Text>\n                </Col>\n\n                <Col span={ 4 } align=\"right\">\n                    <Button\n                        shape=\"round\"\n                        type=\"danger\"\n                        onClick={ salir }\n                    >\n                        <CloseCircleOutlined />\n                        Salir\n                    </Button>\n                </Col>\n\n            </Row>\n\n            <Divider />\n\n            {\n                ticket && (\n                    <Row>\n                        <Col>\n                            <Text>Está atendiendo el ticket número: </Text>\n                            <Text \n                                style={{ fontSize: 30 }} \n                                type=\"danger\"\n                            > \n                            { ticket.numero }\n                            </Text>\n                        </Col>\n                    </Row>\n                )\n            }\n\n\n            <Row>\n                <Col offset={ 18 } span={ 6 } align=\"right\">\n                    <Button\n                        onClick={ siguienteTicket }\n                        shape=\"round\"\n                        type=\"primary\"\n                    >\n                        <RightOutlined />\n                        Siguiente\n                    </Button>\n                </Col>  \n\n\n            </Row>\n\n        </>\n    )\n}\n","import React, { useContext } from 'react';\n\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom';\n\nimport { Ingresar } from './Ingresar';\nimport { Cola } from './Cola';\nimport { CrearTicket } from './CrearTicket';\nimport { Escritorio } from './Escritorio';\nimport { UiContext } from '../context/UiContext';\n\n\nconst { Sider, Content } = Layout;\n\n\nexport const RouterPage = () => {\n\n    const { ocultarMenu } = useContext( UiContext )\n\n    return (\n        <Router>\n            <Layout style={{ height: '100vh' }}>\n              <Sider collapsedWidth=\"0\"\n                     breakpoint=\"md\"\n                     hidden={ ocultarMenu }>\n              <div className=\"logo\" />\n                  <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                      <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                        <Link to=\"/ingresar\">\n                          Ingresar\n                        </Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                        <Link to=\"/cola\">\n                          Cola de tickets\n                        </Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n                        <Link to=\"/crear\">\n                          Crear tickets\n                        </Link>\n                      </Menu.Item>\n                  </Menu>\n              </Sider>\n              <Layout className=\"site-layout\">\n\n                <Content\n                  className=\"site-layout-background\"\n                  style={{\n                    margin: '24px 16px',\n                    padding: 24,\n                    minHeight: 280,\n                  }}\n                >\n                  <Switch>\n                    <Route path=\"/ingresar\" component={ Ingresar } />\n                    <Route path=\"/cola\" component={ Cola } />\n                    <Route path=\"/crear\" component={ CrearTicket } />\n\n                    <Route path=\"/escritorio\" component={ Escritorio } />\n\n                    <Redirect to=\"/ingresar\" />\n\n                  </Switch>\n                  \n                </Content>\n              </Layout>\n          </Layout>\n        </Router>\n    )\n}\n","import React from 'react';\n\nimport { SocketProvider } from './context/SocketContext';\nimport { UiProvider } from './context/UiContext';\nimport { RouterPage } from './pages/RouterPage';\n\nexport const TicketApp = () => {\n    return (\n        <SocketProvider>\n            <UiProvider>\n                <RouterPage />\n            </UiProvider>\n        </SocketProvider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { TicketApp } from './TicketApp';\n\nReactDOM.render(\n  <TicketApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}